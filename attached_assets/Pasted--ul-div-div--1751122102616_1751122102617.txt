         </ul>
                        </div>
                    </div>
                    
                    <!-- Fluxo de Processamento -->
                    <div style="background: white; border: 1px solid #e1e5e9; border-radius: 8px; padding: 1.5rem; margin-bottom: 2rem;">
                        <h4 style="margin: 0 0 1rem 0; color: #1f2937;">üîÑ Fluxo de Processamento Inteligente</h4>
                        <div style="display: grid; grid-template-columns: repeat(5, 1fr); gap: 1rem; text-align: center;">
                            <div style="padding: 1rem; background: #f8f9fa; border-radius: 6px;">
                                <div style="font-size: 1.5rem; margin-bottom: 0.5rem;">üìÅ</div>
                                <div style="font-size: 0.75rem; font-weight: 500;">Escaneamento</div>
                            </div>
                            <div style="padding: 1rem; background: #f8f9fa; border-radius: 6px;">
                                <div style="font-size: 1.5rem; margin-bottom: 0.5rem;">üîç</div>
                                <div style="font-size: 0.75rem; font-weight: 500;">Pr√©-an√°lise</div>
                            </div>
                            <div style="padding: 1rem; background: #f8f9fa; border-radius: 6px;">
                                <div style="font-size: 1.5rem; margin-bottom: 0.5rem;">üè¢</div>
                                <div style="font-size: 0.75rem; font-weight: 500;">Classifica√ß√£o</div>
                            </div>
                            <div style="padding: 1rem; background: #f8f9fa; border-radius: 6px;">
                                <div style="font-size: 1.5rem; margin-bottom: 0.5rem;">‚ö°</div>
                                <div style="font-size: 0.75rem; font-weight: 500;">Prioriza√ß√£o</div>
                            </div>
                            <div style="padding: 1rem; background: #f8f9fa; border-radius: 6px;">
                                <div style="font-size: 1.5rem; margin-bottom: 0.5rem;">üìä</div>
                                <div style="font-size: 0.75rem; font-weight: 500;">Relat√≥rios</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Regras de Prioriza√ß√£o -->
                    <div style="background: #fffbeb; border: 1px solid #f59e0b; border-radius: 8px; padding: 1.5rem;">
                        <h4 style="margin: 0 0 1rem 0; color: #92400e;">‚öñÔ∏è Regras de Processamento por Prioridade</h4>
                        <div style="font-size: 0.875rem; color: #92400e; line-height: 1.6;">
                            <p><strong>1. Identifica√ß√£o de Empresa:</strong></p>
                            <ul style="margin: 0.5rem 0 1rem 1.5rem;">
                                <li>Presen√ßa do nome da empresa no documento</li>
                                <li>Detec√ß√£o de emails com dom√≠nio da empresa (@empresa.com)</li>
                            </ul>
                            
                            <p><strong>2. Ordem de Processamento:</strong></p>
                            <ul style="margin: 0.5rem 0 1rem 1.5rem;">
                                <li>Prioridade 1-10: Empresas conforme tabela de prioridades</li>
                                <li>IA ajusta prioridades dinamicamente baseado em sensibilidade</li>
                                <li>N√£o classificados: Processados por √∫ltimo</li>
                            </ul>
                            
                            <p><strong>3. Benef√≠cios:</strong></p>
                            <ul style="margin: 0.5rem 0 0 1.5rem;">
                                <li>Clientes importantes atendidos primeiro</li>
                                <li>Organiza√ß√£o transparente do processo</li>
                                <li>Flexibilidade para ajustes din√¢micos</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Aba Cadastro de Incidentes -->
        <div id="aba-incidentes" class="tab-content">
            <div class="data-table">
                <div class="table-header">
                    <h3>Cadastro de Incidentes LGPD</h3>
                    <span>Registro e controle de incidentes de seguran√ßa da informa√ß√£o</span>
                </div>
                
                <!-- Formul√°rio de Cadastro -->
                <div style="background: white; padding: 1.5rem; border-radius: 8px; border: 1px solid #e1e5e9; margin-bottom: 2rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h4 style="margin: 0;">Registrar Novo Incidente</h4>
                        <button onclick="mostrarFormIncidente()" id="btn-novo-incidente" style="background: #3b82f6; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; cursor: pointer;">
                            + Novo Incidente
                        </button>
                    </div>
                    
                    <div id="form-incidente" style="display: none;">
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem; margin-bottom: 1rem;">
                            <div>
                                <label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Nome da Empresa:</label>
                                <input type="text" id="incidente-empresa" placeholder="Nome da empresa afetada" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 4px;">
                            </div>
                            <div>
                                <label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Data do Incidente:</label>
                                <input type="date" id="incidente-data" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 4px;">
                            </div>
                            <div>
                                <label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Tipo de Incidente:</label>
                                <select id="incidente-tipo" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 4px;">
                                    <option value="">Selecione o tipo</option>
                                    <option value="Vazamento de Dados">Vazamento de Dados</option>
                                    <option value="Acesso N√£o Autorizado">Acesso N√£o Autorizado</option>
                                    <option value="Perda de Dados">Perda de Dados</option>
                                    <option value="Falha de Seguran√ßa">Falha de Seguran√ßa</option>
                                    <option value="Viola√ß√£o de Consentimento">Viola√ß√£o de Consentimento</option>
                                    <option value="Tratamento Inadequado">Tratamento Inadequado</option>
                                    <option value="Phishing/Malware">Phishing/Malware</option>
                                    <option value="Erro Humano">Erro Humano</option>
                                    <option value="Outro">Outro</option>
                                </select>
                            </div>
                        </div>
                        
                        <div style="margin-bottom: 1rem;">
                            <label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Descri√ß√£o do Incidente:</label>
                            <textarea id="incidente-descricao" placeholder="Descreva detalhadamente o incidente, incluindo dados afetados, pessoas envolvidas e impacto..." 
                                style="width: 100%; min-height: 100px; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 4px; resize: vertical;"></textarea>
                        </div>
                        
                        <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                            <button onclick="cancelarFormIncidente()" style="background: #6b7280; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; cursor: pointer;">
                                Cancelar
                            </button>
                            <button onclick="salvarIncidente()" style="background: #10b981; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; cursor: pointer;">
                                Salvar Incidente
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Lista de Incidentes -->
                <div style="background: white; padding: 1.5rem; border-radius: 8px; border: 1px solid #e1e5e9;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h4 style="margin: 0;">Hist√≥rico de Incidentes</h4>
                        <div style="display: flex; gap: 1rem;">
                            <select id="filtro-tipo-incidente" style="padding: 0.25rem 0.5rem; border: 1px solid #d1d5db; border-radius: 4px; font-size: 0.875rem;">
                                <option value="todos">Todos os tipos</option>
                                <option value="Vazamento de Dados">Vazamento de Dados</option>
                                <option value="Acesso N√£o Autorizado">Acesso N√£o Autorizado</option>
                                <option value="Perda de Dados">Perda de Dados</option>
                                <option value="Falha de Seguran√ßa">Falha de Seguran√ßa</option>
                                <option value="Outro">Outros</option>
                            </select>
                            <button onclick="carregarIncidentes()" style="background: #6b7280; color: white; border: none; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.875rem;">
                                Atualizar
                            </button>
                        </div>
                    </div>
                    
                    <div style="overflow-x: auto;">
                        <table>
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Empresa</th>
                                    <th>Data</th>
                                    <th>Tipo</th>
                                    <th>Descri√ß√£o</th>
                                    <th>Status</th>
                                    <th>A√ß√µes</th>
                                </tr>
                            </thead>
                            <tbody id="incidentes-table">
                                <tr>
                                    <td colspan="7" class="loading">Carregando incidentes...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Aba Monitor de IA -->
        <div id="aba-ai-monitor" class="tab-content">
            <div class="data-table">
                <div class="table-header">
                    <h3>Monitor de IA em Tempo Real - PostgreSQL</h3>
                    <span>Sistema h√≠brido de prioriza√ß√£o com an√°lise sem√¢ntica</span>
                </div>
                
                <!-- Status do Sistema -->
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
                    <div class="metric-card">
                        <div class="metric-label">Status do Sistema</div>
                        <div id="system-status" style="font-size: 1rem; margin-top: 0.5rem;">
                            <div style="display: flex; gap: 1rem; align-items: center;">
                                <span id="postgres-status">üîÑ Verificando PostgreSQL...</span>
                                <span id="ai-status">üîÑ Verificando IA...</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="metric-card">
                        <div class="metric-label">M√©tricas da Fila</div>
                        <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 1rem; margin-top: 0.5rem;">
                            <div style="text-align: center;">
                                <div id="queue-pending" style="font-size: 1.5rem; font-weight: 700; color: #f59e0b;">0</div>
                                <div style="font-size: 0.75rem; color: #6b7280;">Pendentes</div>
                            </div>
                            <div style="text-align: center;">
                                <div id="queue-processing" style="font-size: 1.5rem; font-weight: 700; color: #3b82f6;">0</div>
                                <div style="font-size: 0.75rem; color: #6b7280;">Processando</div>
                            </div>
                            <div style="text-align: center;">
                                <div id="queue-completed" style="font-size: 1.5rem; font-weight: 700; color: #10b981;">0</div>
                                <div style="font-size: 0.75rem; color: #6b7280;">Completos</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="metric-card">
                        <div class="metric-label">Escala√ß√µes de IA</div>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 0.5rem;">
                            <div>
                                <div id="ai-escalations" style="font-size: 1.5rem; font-weight: 700; color: #ef4444;">0</div>
                                <div style="font-size: 0.75rem; color: #6b7280;">Prioridades ajustadas</div>
                            </div>
                            <div style="font-size: 2rem;">‚ö°</div>
                        </div>
                    </div>
                </div>
                
                <!-- Tabela de Prioridades de Busca PostgreSQL -->
                <div style="background: white; padding: 1.5rem; border-radius: 8px; border: 1px solid #e1e5e9; margin-bottom: 2rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h4 style="margin: 0;">Tabela de Prioridades de Busca (PostgreSQL)</h4>
                        <button onclick="carregarPrioridadesPostgreSQL()" style="padding: 0.5rem 1rem; background: #3b82f6; color: white; border: none; border-radius: 6px; cursor: pointer;">
                            üîÑ Atualizar
                        </button>
                    </div>
                    <div style="overflow-x: auto;">
                        <table>
                            <thead>
                                <tr>
                                    <th>Prioridade</th>
                                    <th>Nome do Cliente</th>
                                    <th>Dom√≠nio de Email</th>
                                    <th>IA Habilitada</th>
                                    <th>Limite de Confian√ßa</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody id="prioridades-pg-table">
                                <tr>
                                    <td colspan="6" class="loading">Carregando prioridades do PostgreSQL...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Fila de Processamento com IA -->
                <div style="background: white; padding: 1.5rem; border-radius: 8px; border: 1px solid #e1e5e9; margin-bottom: 2rem;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h4 style="margin: 0;">Fila de Processamento com IA</h4>
                        <button onclick="carregarFilaProcessamento()" style="padding: 0.5rem 1rem; background: #10b981; color: white; border: none; border-radius: 6px; cursor: pointer;">
                            üîÑ Atualizar Fila
                        </button>
                    </div>
                    <div style="overflow-x: auto;">
                        <table>
                            <thead>
                                <tr>
                                    <th>Arquivo</th>
                                    <th>Cliente Identificado</th>
                                    <th>Prioridade Est√°tica</th>
                                    <th>Prioridade IA</th>
                                    <th>Confian√ßa IA</th>
                                    <th>Fonte da Decis√£o</th>
                                    <th>Motivo da Escala√ß√£o</th>
                                </tr>
                            </thead>
                            <tbody id="fila-processamento-table">
                                <tr>
                                    <td colspan="7" class="loading">Carregando fila de processamento...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Principais Clientes por Volume -->
                <div style="background: white; padding: 1.5rem; border-radius: 8px; border: 1px solid #e1e5e9;">
                    <h4 style="margin: 0 0 1rem 0;">Top Clientes por Volume de Documentos</h4>
                    <div id="top-clients-chart" style="min-height: 200px; background: #f8f9fa; border-radius: 6px; display: flex; align-items: center; justify-content: center; color: #6b7280;">
                        Carregando gr√°fico de clientes...
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Carregar dados iniciais
        document.addEventListener('DOMContentLoaded', function() {
            carregarEstatisticas();
            carregarDominios();
            carregarEmpresas();
            carregarResultados();
        });
        
        function carregarEstatisticas() {
            fetch('/api/estatisticas')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-dados').textContent = data.total_dados || 0;
                    document.getElementById('arquivos-processados').textContent = data.arquivos_processados || 0;
                    document.getElementById('titulares-identificados').textContent = data.titulares_identificados || 0;
                    document.getElementById('dados-prioritarios').textContent = data.dados_alta_prioridade || 0;
                })
                .catch(error => console.error('Erro ao carregar estat√≠sticas:', error));
        }
        
        function carregarDominios() {
            fetch('/api/dominios')
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById('filtro-dominio');
                    select.innerHTML = '<option value="todos">Todos os Dom√≠nios</option>';
                    data.forEach(dominio => {
                        const option = document.createElement('option');
                        option.value = dominio;
                        option.textContent = dominio;
                        select.appendChild(option);
                    });
                })
                .catch(error => console.error('Erro ao carregar dom√≠nios:', error));
        }
        
        function carregarEmpresas() {
            fetch('/api/empresas')
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById('filtro-empresa');
                    select.innerHTML = '<option value="todos">Todas as Empresas</option>';
                    data.forEach(empresa => {
                        const option = document.createElement('option');
                        option.value = empresa;
                        option.textContent = empresa;
                        select.appendChild(option);
                    });
                })
                .catch(error => console.error('Erro ao carregar empresas:', error));
        }
        
        function carregarResultados() {
            const dominio = document.getElementById('filtro-dominio').value;
            const empresa = document.getElementById('filtro-empresa').value;
            
            let url = '/api/resultados';
            const params = new URLSearchParams();
            
            if (dominio && dominio !== 'todos') {
                params.append('dominio', dominio);
            }
            if (empresa && empresa !== 'todos') {
                params.append('empresa', empresa);
            }
            
            if (params.toString()) {
                url += '?' + params.toString();
            }
            
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const tbody = document.getElementById('dados-table');
                    document.getElementById('contador-resultados').textContent = `${data.length} registros`;
                    
                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="8" class="loading">Nenhum dado encontrado</td></tr>';
                        return;
                    }
                    
                    tbody.innerHTML = data.map(item => `
                        <tr>
                            <td>${item.dominio || '-'}</td>
                            <td>${item.empresa || '-'}</td>
                            <td>${item.tipo_dado}</td>
                            <td>${item.valor_encontrado}</td>
                            <td>${item.titular_identificado || '-'}</td>
                            <td>
                                <span class="priority-${item.prioridade.toLowerCase()}">
                                    ${item.prioridade}
                                </span>
                            </td>
                            <td>${item.arquivo_origem.split('/').pop()}</td>
                            <td>${new Date(item.data_analise).toLocaleDateString('pt-BR')}</td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Erro ao carregar resultados:', error);
                    document.getElementById('dados-table').innerHTML = 
                        '<tr><td colspan="8" class="loading">Erro ao carregar dados</td></tr>';
                });
        }
        
        function filtrarDados() {
            carregarResultados();
        }
        
        function exportarExcel() {
            const dominio = document.getElementById('filtro-dominio').value;
            const empresa = document.getElementById('filtro-empresa').value;
            
            let url = '/api/export-excel';
            const params = new URLSearchParams();
            
            if (dominio && dominio !== 'todos') {
                params.append('dominio', dominio);
            }
            if (empresa && empresa !== 'todos') {
                params.append('empresa', empresa);
            }
            
            if (params.toString()) {
                url += '?' + params.toString();
            }
            
            window.open(url, '_blank');
        }
        
        function mostrarMensagem(tipo, mensagem) {
            const container = document.getElementById('status-messages');
            const div = document.createElement('div');
            div.className = `status-message status-${tipo}`;
            div.textContent = mensagem;
            container.appendChild(div);
            
            setTimeout(() => {
                div.remove();
            }, 5000);
        }
        
        function processarArquivos() {
            const diretorio = document.getElementById('diretorio-arquivos').value.trim();
            
            if (!diretorio) {
                mostrarMensagem('error', 'Por favor, informe o diret√≥rio dos arquivos');
                return;
            }
            
            // Mostrar status de processamento
            document.getElementById('status-processamento').style.display = 'block';
            document.getElementById('btn-processar').disabled = true;
            document.getElementById('btn-processar').textContent = 'Processando...';
            
            // Reset progress
            document.getElementById('progress-fill').style.width = '0%';
            document.getElementById('arquivo-atual').textContent = 'Iniciando processamento...';
            document.getElementById('contador-progresso').textContent = '0 de 0 arquivos processados';
            
            fetch('/api/processar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    diretorio: diretorio
                })
            })
            .then(response => response.json())
            .then(data => {
                // Esconder status de processamento
                document.getElementById('status-processamento').style.display = 'none';
                document.getElementById('btn-processar').disabled = false;
                document.getElementById('btn-processar').textContent = 'Processar Arquivos';
                
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                    carregarEstatisticas();
                    carregarDominios();
                    carregarEmpresas();
                    carregarResultados();
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                // Esconder status de processamento
                document.getElementById('status-processamento').style.display = 'none';
                document.getElementById('btn-processar').disabled = false;
                document.getElementById('btn-processar').textContent = 'Processar Arquivos';
                
                mostrarMensagem('error', 'Erro no processamento: ' + error.message);
            });
        }
        
        function verificarStatusProcessamento() {
            fetch('/api/status-processamento')
                .then(response => response.json())
                .then(data => {
                    if (data.processando) {
                        document.getElementById('progress-fill').style.width = 
                            ((data.progresso / data.total_arquivos) * 100) + '%';
                        document.getElementById('arquivo-atual').textContent = 
                            'Processando: ' + data.arquivo_atual;
                        document.getElementById('contador-progresso').textContent = 
                            data.progresso + ' de ' + data.total_arquivos + ' arquivos processados';
                    }
                })
                .catch(error => console.error('Erro ao verificar status:', error));
        }
        
        function carregarEmpresas() {
            fetch('/api/carregar-empresas', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                mostrarMensagem('error', 'Erro ao carregar empresas: ' + error.message);
            });
        }
        
        // === FUN√á√ïES DE ABAS ===
        
        function mostrarAba(nomeAba) {
            // Esconder todas as abas
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Remover classe ativa de todos os bot√µes
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Mostrar aba selecionada
            document.getElementById('aba-' + nomeAba).classList.add('active');
            
            // Adicionar classe ativa ao bot√£o
            event.target.classList.add('active');
            
            // Carregar dados espec√≠ficos da aba
            if (nomeAba === 'prioridades') {
                carregarPrioridades();
            } else if (nomeAba === 'regex') {
                carregarRegexPatterns();
            } else if (nomeAba === 'ai-monitor') {
                carregarStatusSistema();
                carregarMetricasIA();
                carregarPrioridadesPostgreSQL();
                carregarFilaProcessamento();
            }
        }
        
        // === FUN√á√ïES DE PRIORIDADE DE BUSCA ===
        
        function carregarPrioridades() {
            fetch('/api/prioridades-busca')
                .then(response => response.json())
                .then(data => {
                    const tbody = document.getElementById('prioridades-table');
                    
                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="5" class="loading">Nenhuma prioridade encontrada</td></tr>';
                        return;
                    }
                    
                    tbody.innerHTML = data.map(item => `
                        <tr>
                            <td><strong>${item.prioridade}</strong></td>
                            <td>${item.nome_empresa}</td>
                            <td>${item.dominio_email}</td>
                            <td>${new Date(item.data_criacao).toLocaleDateString('pt-BR')}</td>
                            <td>
                                <button onclick="removerPrioridade(${item.id})" 
                                        style="background: #dc2626; color: white; border: none; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem;">
                                    Remover
                                </button>
                            </td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Erro ao carregar prioridades:', error);
                    document.getElementById('prioridades-table').innerHTML = 
                        '<tr><td colspan="5" class="loading">Erro ao carregar prioridades</td></tr>';
                });
        }
        
        function mostrarFormPrioridade() {
            document.getElementById('form-prioridade').style.display = 'block';
        }
        
        function cancelarFormPrioridade() {
            document.getElementById('form-prioridade').style.display = 'none';
            // Limpar campos
            document.getElementById('nova-prioridade').value = '';
            document.getElementById('nova-empresa').value = '';
            document.getElementById('novo-dominio').value = '';
        }
        
        function adicionarPrioridade() {
            const prioridade = document.getElementById('nova-prioridade').value;
            const empresa = document.getElementById('nova-empresa').value;
            const dominio = document.getElementById('novo-dominio').value;
            
            if (!prioridade || !empresa || !dominio) {
                mostrarMensagem('error', 'Todos os campos s√£o obrigat√≥rios');
                return;
            }
            
            fetch('/api/prioridades-busca', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    prioridade: parseInt(prioridade),
                    nome_empresa: empresa,
                    dominio_email: dominio
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                    cancelarFormPrioridade();
                    carregarPrioridades();
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                mostrarMensagem('error', 'Erro ao adicionar prioridade: ' + error.message);
            });
        }
        
        function removerPrioridade(id) {
            if (!confirm('Tem certeza que deseja remover esta prioridade?')) {
                return;
            }
            
            fetch('/api/prioridades-busca/' + id, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                    carregarPrioridades();
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                mostrarMensagem('error', 'Erro ao remover prioridade: ' + error.message);
            });
        }
        
        function carregarPrioridadesPadrao() {
            fetch('/api/carregar-prioridades-padrao', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                    carregarPrioridades();
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                mostrarMensagem('error', 'Erro ao carregar prioridades padr√£o: ' + error.message);
            });
        }
        
        // === FUN√á√ïES DO MONITOR DE IA ===
        
        function carregarStatusSistema() {
            fetch('/api/system-status')
                .then(response => response.json())
                .then(data => {
                    const postgresStatus = document.getElementById('postgres-status');
                    const aiStatus = document.getElementById('ai-status');
                    
                    if (data.postgresql_enabled) {
                        postgresStatus.innerHTML = '‚úÖ PostgreSQL Ativo';
                        postgresStatus.style.color = '#10b981';
                    } else {
                        postgresStatus.innerHTML = '‚ùå PostgreSQL Inativo';
                        postgresStatus.style.color = '#ef4444';
                    }
                    
                    if (data.ai_system_enabled) {
                        aiStatus.innerHTML = 'ü§ñ IA Ativa';
                        aiStatus.style.color = '#10b981';
                    } else {
                        aiStatus.innerHTML = '‚ùå IA Inativa';
                        aiStatus.style.color = '#ef4444';
                    }
                })
                .catch(error => {
                    console.error('Erro ao carregar status:', error);
                    document.getElementById('postgres-status').innerHTML = '‚ùå Erro na conex√£o';
                    document.getElementById('ai-status').innerHTML = '‚ùå Erro na conex√£o';
                });
        }
        
        function carregarMetricasIA() {
            fetch('/api/ai-metrics')
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'disabled') {
                        document.getElementById('queue-pending').textContent = '-';
                        document.getElementById('queue-processing').textContent = '-';
                        document.getElementById('queue-completed').textContent = '-';
                        document.getElementById('ai-escalations').textContent = '-';
                        return;
                    }
                    
                    if (data.queue_stats) {
                        document.getElementById('queue-pending').textContent = data.queue_stats.pending || 0;
                        document.getElementById('queue-processing').textContent = data.queue_stats.processing || 0;
                        document.getElementById('queue-completed').textContent = data.queue_stats.completed || 0;
                    }
                    
                    document.getElementById('ai-escalations').textContent = data.ai_escalations || 0;
                    
                    // Atualizar gr√°fico de clientes
                    if (data.top_clients && data.top_clients.length > 0) {
                        const chart = document.getElementById('top-clients-chart');
                        chart.innerHTML = data.top_clients.map(client => `
                            <div style="display: flex; justify-content: space-between; padding: 0.5rem; border-bottom: 1px solid #e1e5e9;">
                                <span>${client.client}</span>
                                <span style="font-weight: 600;">${client.documents} docs</span>
                            </div>
                        `).join('');
                    }
                })
                .catch(error => {
                    console.error('Erro ao carregar m√©tricas IA:', error);
                });
        }
        
        function carregarPrioridadesPostgreSQL() {
            fetch('/api/search-priorities-pg')
                .then(response => response.json())
                .then(data => {
                    const tbody = document.getElementById('prioridades-pg-table');
                    
                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="6" class="loading">Nenhuma prioridade encontrada no PostgreSQL</td></tr>';
                        return;
                    }
                    
                    tbody.innerHTML = data.map(item => `
                        <tr>
                            <td><strong>${item.priority}</strong></td>
                            <td>${item.client_name}</td>
                            <td>${item.email_domain}</td>
                            <td>
                                <span style="color: ${item.ai_escalation_enabled ? '#10b981' : '#6b7280'};">
                                    ${item.ai_escalation_enabled ? '‚úÖ Sim' : '‚ùå N√£o'}
                                </span>
                            </td>
                            <td>${(item.confidence_threshold * 100).toFixed(0)}%</td>
                            <td>
                                <span style="padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem; background: #dcfce7; color: #166534;">
                                    Ativo
                                </span>
                            </td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Erro ao carregar prioridades PostgreSQL:', error);
                    document.getElementById('prioridades-pg-table').innerHTML = 
                        '<tr><td colspan="6" class="loading">Erro ao carregar dados do PostgreSQL</td></tr>';
                });
        }
        
        function carregarFilaProcessamento() {
            fetch('/api/processing-queue')
                .then(response => response.json())
                .then(data => {
                    const tbody = document.getElementById('fila-processamento-table');
                    
                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="7" class="loading">Nenhum documento na fila</td></tr>';
                        return;
                    }
                    
                    tbody.innerHTML = data.map(item => `
                        <tr>
                            <td>${item.file_name}</td>
                            <td>${item.identified_client || 'N√£o identificado'}</td>
                            <td>
                                <span style="padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem; background: #dbeafe; color: #1e40af;">
                                    ${item.static_priority || '-'}
                                </span>
                            </td>
                            <td>
                                <span style="padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem; background: ${item.ai_adjusted_priority < item.static_priority ? '#fef3c7' : '#dcfce7'}; color: ${item.ai_adjusted_priority < item.static_priority ? '#92400e' : '#166534'};">
                                    ${item.ai_adjusted_priority || '-'}
                                    ${item.ai_adjusted_priority < item.static_priority ? ' ‚ö°' : ''}
                                </span>
                            </td>
                            <td>${item.ai_confidence_score ? (item.ai_confidence_score * 100).toFixed(1) + '%' : '-'}</td>
                            <td>${item.priority_source || '-'}</td>
                            <td style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="${item.escalation_reason || ''}">
                                ${item.escalation_reason || '-'}
                            </td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Erro ao carregar fila de processamento:', error);
                    document.getElementById('fila-processamento-table').innerHTML = 
                        '<tr><td colspan="7" class="loading">Erro ao carregar fila de processamento</td></tr>';
                });
        }
        
        // === FUN√á√ïES DE REGEX PATTERNS ===
        
        function carregarRegexPatterns() {
            fetch('/api/regex-patterns')
                .then(response => response.json())
                .then(data => {
                    const tbody = document.getElementById('regex-table');
                    
                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="4" class="loading">Nenhum padr√£o encontrado</td></tr>';
                        return;
                    }
                    
                    tbody.innerHTML = data.map(item => `
                        <tr>
                            <td><strong>${item.nome_campo}</strong></td>
                            <td><code style="background: #f1f5f9; padding: 0.25rem; border-radius: 4px; font-size: 0.75rem;">${item.pattern_regex}</code></td>
                            <td>${item.explicacao}</td>
                            <td>${new Date(item.data_criacao).toLocaleDateString('pt-BR')}</td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Erro ao carregar padr√µes regex:', error);
                    document.getElementById('regex-table').innerHTML = 
                        '<tr><td colspan="4" class="loading">Erro ao carregar padr√µes</td></tr>';
                });
        }
        
        function mostrarFormRegex() {
            document.getElementById('form-regex').style.display = 'block';
        }
        
        function cancelarFormRegex() {
            document.getElementById('form-regex').style.display = 'none';
            // Limpar campos
            document.getElementById('novo-campo').value = '';
            document.getElementById('novo-pattern').value = '';
            document.getElementById('nova-explicacao').value = '';
        }
        
        function adicionarRegex() {
            const campo = document.getElementById('novo-campo').value;
            const pattern = document.getElementById('novo-pattern').value;
            const explicacao = document.getElementById('nova-explicacao').value;
            
            if (!campo || !pattern) {
                mostrarMensagem('error', 'Nome do campo e padr√£o s√£o obrigat√≥rios');
                return;
            }
            
            fetch('/api/regex-patterns', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    nome_campo: campo,
                    pattern_regex: pattern,
                    explicacao: explicacao
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                    cancelarFormRegex();
                    carregarRegexPatterns();
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                mostrarMensagem('error', 'Erro ao adicionar padr√£o: ' + error.message);
            });
        }
        
        function carregarRegexPadrao() {
            fetch('/api/carregar-regex-padrao', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    mostrarMensagem('success', data.message);
                    carregarRegexPatterns();
                } else {
                    mostrarMensagem('error', data.message);
                }
            })
            .catch(error => {
                mostrarMensagem('error', 'Erro ao carregar padr√µes padr√£o: ' + error.message);
            });
        }
        
        // Fix missing function for directory browser
        function abrirNavegadorDiretorios() {
            // Simple directory input - user can type path directly
            const input = document.getElementById('diretorio-arquivos');
            input.focus();
            mostrarMensagem('info', 'Digite o caminho do diret√≥rio (ex: data, /caminho/completo)');
        }
    </script>
    
    <div class="footer">
        <p>powered by <span class="ness-brand">ness.</span></p>
    </div>
</body>
</html>‚úÖ System working
(venv) root@monster:/opt/privacy# 