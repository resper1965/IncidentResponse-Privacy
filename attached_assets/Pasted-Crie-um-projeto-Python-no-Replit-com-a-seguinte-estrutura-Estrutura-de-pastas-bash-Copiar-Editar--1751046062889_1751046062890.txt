Crie um projeto Python no Replit com a seguinte estrutura:

Estrutura de pastas:
bash
Copiar
Editar
.
├── main.py                # Pipeline principal que coordena tudo
├── file_scanner.py        # Varredura recursiva de arquivos
├── file_reader.py         # Leitura de arquivos com suporte a OCR
├── data_extractor.py      # Regex e busca contextualizada
├── database.py            # CRUD em banco SQLite
├── dashboard.py           # Dashboard com Streamlit
├── requirements.txt       # Lista de dependências
└── data/                  # Pasta com os arquivos a serem processados
Requisitos:
Fazer busca recursiva em todas as pastas dentro de data/.

Suportar arquivos: .txt, .pdf (OCR incluso), .docx, .xlsx, .csv, .msg (Outlook).

Fazer extração de dados pessoais via regex (CPF, RG, E-mail, Telefone, Placa, CEP, Nome Completo, IP, Data de Nascimento).

Capturar janela de contexto de 150 caracteres antes e depois do dado encontrado.

Procurar titulares associados via palavras-chave no contexto: Nome, Titular, Contratante, Cliente, Responsável, Parte, Empresa.

Classificar automaticamente os dados como Prioridade Alta para CPF, RG, E-mail, Telefone.

Gravar todas as extrações no banco SQLite com campos: arquivo, titular, campo, valor, contexto, prioridade.

Criar um dashboard em Streamlit com:

Total de dados encontrados.

Arquivos processados.

Titulares identificados.

Lista de dados prioritários.

Exibição completa da base extraída.

Tecnologias e bibliotecas:
os, re, sqlite3, pytesseract, pdfplumber, python-docx, pandas, extract-msg, streamlit

Instalar as dependências no requirements.txt:
nginx
Copiar
Editar
pytesseract
pdfplumber
python-docx
pandas
extract-msg
pillow
streamlit
Configurações adicionais:
Incluir suporte a OCR com pytesseract para páginas de PDFs digitalizados.

O pipeline precisa ser capaz de processar todos os arquivos encontrados automaticamente.

O dashboard deve ser executável via streamlit run dashboard.py.

O projeto deve ser facilmente escalável para PostgreSQL no futuro.

Arquivos de exemplo:
Crie alguns arquivos de exemplo dentro da pasta data/ com diferentes formatos (exemplo: contratos em PDF, textos, planilhas e e-mails simulados).

Entregáveis:
Código organizado por módulos.

Banco SQLite funcionando com gravação automática.

Dashboard Streamlit funcionando.

